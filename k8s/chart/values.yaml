# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Hostname of open-balena instance
hostname: "" # OPENBALENA_HOST_NAME

# General configurations
config:
  # openBalena admin details
  email: ""
  password: ""

  # Production mode for openBalena (will cause containers to restart when crashed)
  production-mode: ""

  # Authorized keys
  ssh-authorized-keys: ""

  s3:
    # When enabled, this Helm chart will provide in an S3 registry
    # If disabled, S3 will still be used, just not deployed, which means you've to provide your own S3 bucket using the details below
    enabled: true

    # S3 Configuration details
    bucket: "" # S3 Bucket
    endpoint: "" # S3 Endpoint
    region: "" # S3 Region
    access-key: "" # S3 Access key
    secret-key: "" # S3 Secret key

  redis:
    # When enabled, this Helm chart will provide in a Redis instance
    # If disabled, Redis will still be used, just not deployed, which means you've to provide your own Redis instance using the details below
    enabled: true

    host: "openbalena-redis" # Redis host
    port: 6379 # Redis port (default 6379)

# openBalena API
api:
  image: balena/open-balena-api
  version: "v0.119.5"
  replicas: 1

  nodeSelector: {}

  sentry-dsn: ""

# openBalena VPN
vpn:
  image: balena/open-balena-vpn
  version: "v9.17.4"
  replicas: 1

  nodeSelector: {}

  sentry-dsn: ""

# openBalena Registry
registry:
  image: balena/open-balena-registry
  version: "v2.14.4"
  replicas: 1

  nodeSelector: {}

  volume:
    storage: "1Gi"

# openBalena S3
s3:
  # You can disable this deployment you want to use another S3 service
  # Just fill the config parts with the correct details
  enabled: true

  image: balena/open-balena-s3
  version: "v2.9.9"
  replicas: 1

  nodeSelector: {}

  volume:
    storage: "25Gi"

# openBalena Database
db:
  image: balena/open-balena-db
  version: "v4.1.0"
  replicas: 1

  nodeSelector: {}

  volume:
    storage: "1Gi"

# Redis instance
redis:
  image: redis
  version: "alpine"
  replicas: 1

  nodeSelector: {}

  volume:
    storage: "1Gi"

# Keys
keys:
  cookie-secret: "" # OPENBALENA_COOKIE_SESSION_SECRET
  jwt-secret:  # OPENBALENA_JWT_SECRET
  registry-code:  # OPENBALENA_RESINOS_REGISTRY_CODE
  service-api-key: "" # OPENBALENA_VPN_SERVICE_API_KEY
  api-vpn-service-api-key: "" # OPENBALENA_API_VPN_SERVICE_API_KEY
  registry-secret-key: "" # OPENBALENA_REGISTRY_SECRET_KEY
  token-auth-builder-token: "" # OPENBALENA_TOKEN_AUTH_BUILDER_TOKEN
  token-auth-pub: "" # OPENBALENA_TOKEN_AUTH_PUB
  token-auth-key: "" # OPENBALENA_TOKEN_AUTH_KEY
  token-auth-kid: "" # OPENBALENA_TOKEN_AUTH_KID

# Certificates
certificates:
  # Root certificates
  root:
    # OPENBALENA_ROOT_CA
    ca: ""

    # OPENBALENA_ROOT_CRT
    crt: ""

    # OPENBALENA_ROOT_KEY
    key: ""

  vpn:
    # OPENBALENA_VPN_CA
    ca: ""

    # OPENBALENA_VPN_CA_CHAIN
    ca-chain: ""

    # OPENBALENA_VPN_SERVER_CRT
    crt: ""

    # OPENBALENA_VPN_SERVER_KEY
    server-key: ""

    # OPENBALENA_VPN_SERVER_DH
    dh: ""

##
## HAProxy Ingress Chart
##
## https://github.com/haproxy-ingress/charts/blob/master/haproxy-ingress/values.yaml
##
haproxy:
  controller:
    ingressClass: "openbalena-haproxy"

    # Change config of HAProxy
    # This will add a snippet for the VPN using port 443
    # TODO: Use Namespace instead of 'default'
    config:
      config-proxy: |-
          _front__tls
            # BEGIN::Redirect to openBalena VPN
            acl is_ssl req.ssl_ver 2:3.4
            use_backend default_openbalena-vpn_443 if !is_ssl
            # END::Redirect to openBalena VPN

    # Add TCP proxies for the VPN
    # This option is deprecated in v0.13, but we need v0.13 of HAProxy in order for all to work
    # So we rely on this until further notice
    # This will cause port 3129 to be opened on the Load Balancer, so keep that in mind!
    tcp:
      3129: "{{ .Release.Namespace }}/openbalena-vpn:3128:::{{ .Release.Namespace }}/openbalena-http-tunnel-tls"
