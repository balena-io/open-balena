apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: openbalena
    component: api
  name: openbalena-api
spec:
  replicas: {{ index .Values "deployments" "api" "replicas" }}
  selector:
    matchLabels:
      app: openbalena
      component: api
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: openbalena
        component: api
    spec:
      containers:
      - image: {{ index .Values "deployments" "api" "image" }}:{{ index .Values "deployments" "api" "version" }}
        name: openbalena-api
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RESOURCE
          privileged: true
        env:
        - name: CONFD_BACKEND
          value: "ENV"
        - name: API_VPN_SERVICE_API_KEY
          value: "{{ index .Values "keys" "api-vpn-service-api-key" }}"
        - name: BALENA_ROOT_CA
          value: "{{ index .Values "certificates" "root" "ca" }}"
        - name: COOKIE_SESSION_SECRET
          value: "{{ index .Values "keys" "cookie-secret" }}"
        - name: DB_HOST
          value: "openbalena-db"
        - name: DB_PASSWORD
          value: "docker"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "docker"
        - name: DELTA_HOST
          value: "delta.{{ index .Values "hostname" }}"
        - name: DEVICE_CONFIG_OPENVPN_CA
          value: "{{ index .Values "certificates" "vpn" "ca-chain" }}"
        - name: DEVICE_CONFIG_SSH_AUTHORIZED_KEYS
          value: "{{ index .Values "config" "ssh-authorized-keys" }}"
        - name: HOST
          value: "api.{{ index .Values "hostname" }}"
        - name: IMAGE_MAKER_URL
          value: "img.{{ index .Values "hostname" }}"
        - name: IMAGE_STORAGE_BUCKET
          value: "resin-production-img-cloudformation"
        - name: IMAGE_STORAGE_ENDPOINT
          value: "s3.amazonaws.com"
        - name: IMAGE_STORAGE_PREFIX
          value: "resinos"
        - name: JSON_WEB_TOKEN_EXPIRY_MINUTES
          value: "10080"
        - name: JSON_WEB_TOKEN_SECRET
          value: "{{ index .Values "keys" "jwt-secret" }}"
        - name: MIXPANEL_TOKEN
          value: "__unused__"
        - name: PRODUCTION_MODE
          value: "{{ index .Values "config" "production-mode" }}"
        - name: PUBNUB_PUBLISH_KEY
          value: "__unused__"
        - name: PUBNUB_SUBSCRIBE_KEY
          value: "__unused__"
        - name: REDIS_HOST
          value: "{{ index .Values "deployments" "redis" "config" "host" }}"
        - name: REDIS_PORT
          value: "{{ index .Values "deployments" "redis" "config" "port" }}"
        - name: REGISTRY2_HOST
          value: "registry.{{ index .Values "hostname" }}"
        - name: REGISTRY_HOST
          value: "registry.{{ index .Values "hostname" }}"
        - name: SENTRY_DSN
          value: "{{ index .Values "deployments" "api" "sentry-dsn" }}"
        - name: TOKEN_AUTH_BUILDER_TOKEN
          value: "{{ index .Values "keys" "token-auth-builder-token" }}"
        - name: TOKEN_AUTH_CERT_ISSUER
          value: "api.{{ index .Values "hostname" }}"
        - name: TOKEN_AUTH_CERT_KEY
          value: "{{ index .Values "keys" "token-auth-key" }}"
        - name: TOKEN_AUTH_CERT_KID
          value: "{{ index .Values "keys" "token-auth-kid" }}"
        - name: TOKEN_AUTH_CERT_PUB
          value: "{{ index .Values "keys" "token-auth-pub" }}"
        - name: TOKEN_AUTH_JWT_ALGO
          value: "ES256"
        - name: VPN_HOST
          value: "vpn.{{ index .Values "hostname" }}"
        - name: VPN_PORT
          value: "443"
        - name: VPN_SERVICE_API_KEY
          value: "{{ index .Values "keys" "service-api-key" }}"
        - name: SUPERUSER_EMAIL
          value: "{{ index .Values "config" "email" }}"
        - name: SUPERUSER_PASSWORD
          value: "{{ index .Values "config" "password" }}"
        volumeMounts:
        - mountPath: /run
          name: api-tmpfs0
        - mountPath: /sys/fs/cgroup
          name: api-tmpfs1
      volumes:
      - emptyDir:
          medium: Memory
        name: api-tmpfs0
      - emptyDir:
          medium: Memory
        name: api-tmpfs1
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: openbalena
    component: api
  name: openbalena-api
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: openbalena
    component: api
status:
  loadBalancer: {}
