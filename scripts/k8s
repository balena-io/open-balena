#!/bin/bash -e

source "${BASH_SOURCE%/*}/_realpath"

CMD="$(realpath "$0")"
DIR="$(dirname "${CMD}")"
BASE_DIR="$(dirname "${DIR}")"
CONFIG_DIR="${BASE_DIR}/config"

echo_bold() {
  printf "\\033[1m%s\\033[0m\\n" "$@"
}

VERSIONS_FILE="${BASE_DIR}/compose/versions"
if [ ! -f "$VERSIONS_FILE" ]; then
  echo_bold "No service versions defined in ${VERSIONS_FILE}"
  exit 1
fi

ENV_FILE="${CONFIG_DIR}/activate"
if [ ! -f "$ENV_FILE" ]; then
  echo_bold 'No configuration found; please create one first with: ./scripts/quickstart'
  echo_bold 'See README.md for help.'
  exit 1
fi

source "${ENV_FILE}"

# only include the MDNS publisher IF the domain is valid...
if [ ${OPENBALENA_HOST_NAME: -6} == ".local" ]; then
  INCLUDE_MDNS="-f ${BASE_DIR}/compose/mdns.yml"
fi

# shellcheck source=/dev/null
source "${VERSIONS_FILE}"


# Check if delete command
if [[ $1 == "delete" ]]; then
  kubectl delete -f "${BASE_DIR}/k8s/"
  exit 0
fi

# Apply every file
# Namespace
envsubst < "${BASE_DIR}/k8s/namespace.yml" | kubectl apply -f -

# Volumes
envsubst < "${BASE_DIR}/k8s/redis.volume.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-db.volume.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-registry.volume.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-s3.volume.yml" | kubectl apply -f -

# Services
envsubst < "${BASE_DIR}/k8s/redis.service.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-db.service.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-s3.service.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-api.service.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-registry.service.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-vpn.service.yml" | kubectl apply -f -

# Deployments
envsubst < "${BASE_DIR}/k8s/redis.deploy.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-db.deploy.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-s3.deploy.yml" | kubectl apply -f -

# Wait for deployments to be ready
kubectl wait -n openbalena --for=condition=ready pod -l app=redis
kubectl wait -n openbalena --for=condition=ready pod -l app=db
kubectl wait -n openbalena --for=condition=ready pod -l app=s3

# Start the rest of the deployments
envsubst < "${BASE_DIR}/k8s/openbalena-api.deploy.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-registry.deploy.yml" | kubectl apply -f -
envsubst < "${BASE_DIR}/k8s/openbalena-vpn.deploy.yml" | kubectl apply -f -

# Start Ingress
envsubst < "${BASE_DIR}/k8s/ingress.yml" | kubectl apply -f -
