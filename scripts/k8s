#!/bin/bash -e

source "${BASH_SOURCE%/*}/_realpath"

CMD="$(realpath "$0")"
DIR="$(dirname "${CMD}")"
BASE_DIR="$(dirname "${DIR}")"
CONFIG_DIR="${BASE_DIR}/config"

echo_bold() {
  printf "\\033[1m%s\\033[0m\\n" "$@"
}

VERSIONS_FILE="${BASE_DIR}/compose/versions"
if [ ! -f "$VERSIONS_FILE" ]; then
  echo_bold "No service versions defined in ${VERSIONS_FILE}"
  exit 1
fi

SETTINGS_FILE="${CONFIG_DIR}/k8s/settings.yaml"
if [[ ! -f "$SETTINGS_FILE" ]]; then
  echo_bold 'No configuration found; please create one first with: ./scripts/quickstart'
  echo_bold 'See README.md for help.'
  exit 1
fi

# Uninstall
if [ "$@" = "uninstall" ]; then
  helm uninstall openbalena --namespace openbalena
  kubectl delete -f "${BASE_DIR}/k8s/namespace.yml"
  kubectl delete ns cert-manager
  exit 0
fi

install_certmanager () {
  kubectl create namespace cert-manager || true
  kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.yaml
}

install_openbalena () {
  # Create namespace
  kubectl apply -f "${BASE_DIR}/k8s/namespace.yml"

  # Helm
  helm dependency update "${BASE_DIR}/k8s/chart"
  helm upgrade --install openbalena "${BASE_DIR}/k8s/chart" --namespace openbalena -f "${SETTINGS_FILE}"

  # Apply cert-manager issuer
  kubectl apply -f "${CONFIG_DIR}/k8s/cert-issuer.yml"
}

# Install cert-manager & openbalena
install_certmanager
install_openbalena
