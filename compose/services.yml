version: '2.1'

volumes:
  db:
  registry:
  s3:
  redis:

services:
  api:
    extends:
      file: ./common.yml
      service: component
    image: resin/resin-api:${OPENBALENA_API_VERSION_TAG:-master}
    depends_on:
      - db
      - s3
      - redis
    environment:
      API_VPN_SERVICE_API_KEY: ${OPENBALENA_API_VPN_SERVICE_API_KEY}
      AUTH_RESINOS_REGISTRY_CODE: ${OPENBALENA_RESINOS_REGISTRY_CODE}
      BALENA_ROOT_CA: ${OPENBALENA_ROOT_CA}
      COOKIE_SESSION_SECRET: __unused__
      DB_HOST: db.${OPENBALENA_HOST_NAME}
      DB_PASSWORD: docker
      DB_POOL_SIZE:
      DB_PORT: 5432
      DB_USER: docker
      DEBUG: '${OPENBALENA_DEBUG}'
      DELTA_HOST: delta.${OPENBALENA_HOST_NAME}
      HOST: api.${OPENBALENA_HOST_NAME}
      IMAGE_MAKER_URL: img.${OPENBALENA_HOST_NAME}
      IMAGE_STORAGE_BUCKET: ${OPENBALENA_IMAGE_STORAGE_BUCKET:-resin-production-img-cloudformation}
      IMAGE_STORAGE_PREFIX: ${OPENBALENA_IMAGE_STORAGE_PREFIX:-resinos}
      INTERCOM_SECRET_KEY: __unused__
      JSON_WEB_TOKEN_EXPIRY_MINUTES: 10080
      JSON_WEB_TOKEN_SECRET: ${OPENBALENA_JWT_SECRET}
      MIXPANEL_TOKEN: __unused__
      PRODUCTION_MODE: '${OPENBALENA_PRODUCTION_MODE}'
      PUBNUB_PUBLISH_KEY: __unused__
      PUBNUB_SUBSCRIBE_KEY: __unused__
      RATE_LIMIT_FACTOR: 1
      RATE_LIMIT_MEMORY_BACKEND:
      REDIS_HOST: redis.${OPENBALENA_HOST_NAME}
      REDIS_PORT: 6379
      REGISTRY2_HOST: registry.${OPENBALENA_HOST_NAME}
      REGISTRY_HOST: registry.${OPENBALENA_HOST_NAME}
      SENTRY_DSN:
      TOKEN_AUTH_BUILDER_TOKEN: __unused__
      TOKEN_AUTH_CERT_ISSUER: api.${OPENBALENA_HOST_NAME}
      TOKEN_AUTH_CERT_KEY: ${OPENBALENA_TOKEN_AUTH_KEY}
      TOKEN_AUTH_CERT_KID: ${OPENBALENA_TOKEN_AUTH_KID}
      TOKEN_AUTH_CERT_PUB: ${OPENBALENA_TOKEN_AUTH_PUB}
      TOKEN_AUTH_JWT_ALGO: 'ES256'
      VPN_HOST: vpn.${OPENBALENA_HOST_NAME}
      VPN_PORT: 443
      VPN_SERVICE_API_KEY: ${OPENBALENA_VPN_SERVICE_API_KEY}

  registry:
    extends:
      file: ./common.yml
      service: component
    image: resin/open-balena-registry:${OPENBALENA_REGISTRY_VERSION_TAG:-master}
    depends_on:
      - api
      - s3
      - redis
    volumes:
      - registry:/data
    environment:
      API_TOKENAUTH_CRT: ${OPENBALENA_TOKEN_AUTH_PUB}
      BALENA_ROOT_CA: ${OPENBALENA_ROOT_CA}
      COMMON_REGION: 
      REGISTRY2_HOST: registry.${OPENBALENA_HOST_NAME}
      REGISTRY2_S3_BUCKET: 
      REGISTRY2_S3_KEY: 
      REGISTRY2_S3_SECRET: 
      REGISTRY2_STORAGEPATH: /data
      TOKENAUTH_ISSUER: api.${OPENBALENA_HOST_NAME}
      TOKENAUTH_REALM: https://api.${OPENBALENA_HOST_NAME}/auth/v1/token
      # FIXME: remove the following
      REGISTRY2_SECRETKEY: __unused__

  vpn:
    extends:
      file: ./common.yml
      service: component
    image: resin/resin-vpn:${OPENBALENA_VPN_VERSION_TAG:-master}
    depends_on:
      - api
    cap_add:
      - NET_ADMIN
    environment:
      BALENA_ROOT_CA: ${OPENBALENA_ROOT_CA}
      BALENA_VPN_PORT: 443
      LOGENTRIES_TOKEN: 
      PRODUCTION_MODE: '${OPENBALENA_PRODUCTION_MODE}'
      RESIN_API_HOST: api.${OPENBALENA_HOST_NAME}
      RESIN_VPN_GATEWAY: 10.2.0.1
      SENTRY_DSN: 
      VPN_HAPROXY_USEPROXYPROTOCOL: 'true'
      VPN_SERVICE_API_KEY: ${OPENBALENA_VPN_SERVICE_API_KEY}
      VPN_OPENVPN_CA_CRT: ${OPENBALENA_VPN_CA}
      VPN_OPENVPN_SERVER_CRT: ${OPENBALENA_VPN_SERVER_CRT}
      VPN_OPENVPN_SERVER_KEY: ${OPENBALENA_VPN_SERVER_KEY}
      VPN_OPENVPN_SERVER_DH: ${OPENBALENA_VPN_SERVER_DH}
      # FIXME: remove all of the following
      API_SERVICE_API_KEY: __unused__
      PROXY_SERVICE_API_KEY: __unused__5

  db:
    extends:
      file: ./common.yml
      service: system
    image: resin/open-balena-db:${OPENBALENA_DB_VERSION_TAG:-master}
    volumes:
      - db:/var/lib/postgresql/data

  s3:
    extends:
      file: ./common.yml
      service: system
    image: resin/open-balena-s3:${OPENBALENA_S3_VERSION_TAG:-master}
    volumes:
      - s3:/export

  redis:
    extends:
      file: ./common.yml
      service: system
    image: redis:alpine
    volumes:
      - redis:/data

  haproxy:
    extends:
      file: ./common.yml
      service: system
    build: ../haproxy
    depends_on:
      - api
      - registry
      - vpn
      - db
      - s3
      - redis
    ports:
      - "80:80"
      - "222:222"
      - "443:443"
      - "5432:5432"
      - "6379:6379"
    networks:
      default:
        aliases:
          - api.${OPENBALENA_HOST_NAME}
          - registry.${OPENBALENA_HOST_NAME}
          - vpn.${OPENBALENA_HOST_NAME}
          - db.${OPENBALENA_HOST_NAME}
          - s3.${OPENBALENA_HOST_NAME}
          - redis.${OPENBALENA_HOST_NAME}
    environment:
      BALENA_ROOT_CA: ${OPENBALENA_ROOT_CA}
      BALENA_HAPROXY_CRT: ${OPENBALENA_ROOT_CRT}
      BALENA_HAPROXY_KEY: ${OPENBALENA_ROOT_KEY}
      HAPROXY_HOSTNAME: ${OPENBALENA_HOST_NAME}
